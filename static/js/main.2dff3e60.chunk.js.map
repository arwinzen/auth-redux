{"version":3,"sources":["features/auth.js","containers/Login/login.js","containers/Register/register.js","containers/Home/home.js","App.js","app/store.js","index.js"],"names":["initialUserState","name","email","password","isLoggedIn","userSlice","createSlice","initialState","currentUser","registeredUsers","reducers","register","state","action","payload","login","logout","actions","Login","useState","setEmail","setPassword","navigate","useNavigate","dispatch","useDispatch","useSelector","onSubmit","e","preventDefault","user","find","console","log","alert","handleSubmit","type","autoFocus","placeholder","value","onChange","target","to","Register","setName","key","Date","now","handleRegister","htmlFor","Home","useEffect","onClick","handleLogout","App","basename","process","className","path","element","persistConfig","version","storage","persistedReducer","persistReducer","userReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","ReactDOM","render","loading","document","getElementById"],"mappings":"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","file":"static/js/main.2dff3e60.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialUserState = { \r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    isLoggedIn: false,\r\n};\r\n\r\nexport const userSlice = createSlice({\r\n    name: 'user',\r\n    initialState: {\r\n        currentUser: initialUserState,\r\n        registeredUsers: [],\r\n    },\r\n    reducers: {\r\n        register: (state, action) => {\r\n            state.registeredUsers = [...state.registeredUsers, action.payload]\r\n        },\r\n        login: (state, action) => {\r\n            state.currentUser = action.payload \r\n        },\r\n        logout: (state) => {\r\n            state.currentUser = initialUserState\r\n        }\r\n    }\r\n})\r\n\r\n// export actions\r\nexport const { register, login, logout } = userSlice.actions;\r\n\r\n// export const selectUser = (state) => state.currentUser;\r\n// export const registeredUsers = (state) => state.registeredUsers;\r\n\r\nexport default userSlice.reducer;","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { login } from '../../features/auth';\r\n\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction Login(){\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    let navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n\r\n    const registeredUsers = useSelector((state) => state.registeredUsers);\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        // look for credentials that match and save to user variable\r\n        const user = registeredUsers.find(user => user.email === email && user.password === password);\r\n\r\n        if(!email || !password){\r\n            alert('Please fill in all fields')\r\n        } \r\n        // if user exists, update redux store for currentUser and direct to home page\r\n        else if (user)\r\n        {\r\n            console.log('user credentials match');\r\n            dispatch(login({\r\n                name: user.name,\r\n                email: email,\r\n                password: password,\r\n                isLoggedIn: true,\r\n            }))\r\n            navigate('/home')\r\n        } \r\n        else {\r\n            alert('User credentials are invalid');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Login Page</h1>\r\n            <form onSubmit={(e) => handleSubmit(e)}>\r\n                <input \r\n                    name=\"email\"\r\n                    type=\"email\" \r\n                    autoFocus \r\n                    placeholder=\"Email\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n                <input \r\n                    name=\"password\" \r\n                    type=\"password\" \r\n                    placeholder=\"Password\" \r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n                <button type=\"submit\">Login</button>\r\n            </form>\r\n            <p>Don't have an account? \r\n                <Link to=\"/register\">Sign up here</Link>\r\n            </p>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Login;","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { register } from '../../features/auth';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction Register() {\r\n    // \r\n    const [ name, setName ] = useState(\"\");\r\n    const [ email, setEmail ] = useState(\"\");\r\n    const [ password, setPassword ] = useState(\"\");\r\n    let navigate = useNavigate();\r\n    // console.log(useSelector(registeredUsers));\r\n    const registeredUsers = useSelector((state) => state.registeredUsers);\r\n    \r\n    const dispatch = useDispatch();\r\n    // const registeredUsers = useSelector((state) => state.registeredUsers);\r\n\r\n    function handleRegister(e){\r\n        e.preventDefault();\r\n        console.log(name, email, password);\r\n        if (!name || !email || !password){\r\n            alert('Please fill in all fields');\r\n        } else if (registeredUsers.find(user => user.email === email)){\r\n            alert('Email has been registered before');\r\n        } \r\n        else {\r\n            dispatch(register({\r\n                name: name,\r\n                email: email,\r\n                password: password,\r\n                key: Date.now(),\r\n            }))\r\n            alert(`User ${name} successfully created. Please Login`);\r\n            console.log(registeredUsers);\r\n            navigate(\"/\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Registration Page</h1>\r\n            <form onSubmit={(e) => handleRegister(e)}>\r\n                <label htmlFor=\"name\"></label>\r\n                <input \r\n                    name=\"name\" \r\n                    type=\"text\" \r\n                    autoFocus \r\n                    placeholder=\"Name\"\r\n                    onChange={(e) => setName(e.target.value)}\r\n                />\r\n                <label htmlFor=\"email\"></label>\r\n                <input \r\n                    name=\"email\" \r\n                    type=\"email\" \r\n                    placeholder=\"Email\" \r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n                <label htmlFor=\"password\"></label>\r\n                <input \r\n                    name=\"password\" \r\n                    type=\"password\" \r\n                    placeholder=\"Password\" \r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n                <button type=\"submit\">Register</button>\r\n            </form>\r\n            <p>Already have an account? \r\n                <Link to=\"/\">Login here</Link>\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Register;\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { logout } from '../../features/auth';\r\n\r\nfunction Home() {\r\n    const currentUser = useSelector((state) => state.currentUser)\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n\r\n    const handleLogout = (e) => {\r\n        e.preventDefault();\r\n\r\n        dispatch(logout());\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!currentUser.isLoggedIn){\r\n            console.log('Logging you out');\r\n            alert('Logging out. Redirecting to Login page');\r\n            navigate('/');\r\n        }\r\n    },[currentUser.isLoggedIn])\r\n\r\n    return (\r\n        <div>\r\n            <h1>Welcome <span>{currentUser.name}</span></h1>\r\n            <button onClick={(e) => handleLogout(e)}>\r\n                Logout\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;\r\n","import './App.css';\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport Login from './containers/Login/login';\nimport Register from './containers/Register/register';\nimport Home from './containers/Home/home';\n\nfunction App() {\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL} className=\"App\">\n      <Routes>\n        <Route path=\"/\" element={<Login />} />\n        <Route path=\"/register\" element={<Register />} />\n        <Route path=\"/home\" element={<Home/>} />\n      </Routes>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport {\r\n    persistStore,\r\n    persistReducer,\r\n    FLUSH,\r\n    REHYDRATE,\r\n    PAUSE,\r\n    PERSIST,\r\n    PURGE,\r\n    REGISTER,\r\n  } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport userReducer from '../features/auth';\r\n\r\nconst persistConfig = {\r\n    key: 'root',\r\n    version: 1,\r\n    storage,\r\n  }\r\n\r\nconst persistedReducer = persistReducer(persistConfig, userReducer);\r\n\r\nconst store = configureStore({\r\n    reducer: persistedReducer,\r\n    middleware: (getDefaultMiddleware) =>\r\n      getDefaultMiddleware({\r\n        serializableCheck: {\r\n          ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n        },\r\n      }),\r\n  });\r\n\r\nlet persistor = persistStore(store);\r\n\r\nexport { store, persistor };\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport { Provider } from 'react-redux';\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { store, persistor } from \"./app/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}